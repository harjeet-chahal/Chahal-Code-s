package com.chahal;

import java.util.*;

public class TopologicalSortingBFS{
    public static void main(String[] args) {
        int V=5;
        ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
        for(int i=0;i<=V;i++){
            graph.add(new ArrayList<>());
        }

        graph.get(2).add(3);
        graph.get(3).add(1);
        graph.get(4).add(0);
        graph.get(4).add(1);
        graph.get(5).add(0);
        graph.get(5).add(2);

        int[] topSortbfs = topSortBfs(V, graph);

        for(int i=0;i<=V;i++){
            System.out.print(topSortbfs[i] + " ");
        }
    }

    public static int[] topSortBfs(int N, ArrayList<ArrayList<Integer>> graph){
        int topo[] = new int[N+1];
        int[] indegree = new int[N+1];

        for(int i=0;i<=N;i++){
            for(Integer it : graph.get(i)){
                indegree[it]++;
            }
        }

        Queue<Integer> queue = new LinkedList<Integer>();
        for (int i=0;i<=N;i++){
            if(indegree[i] == 0){
                queue.add(i);
            }
        }

        int idx = 0;
        while(!queue.isEmpty()){
            Integer node = queue.poll();
            topo[idx++] = node;

            for (Integer it : graph.get(node)){
                indegree[it]--;
                if(indegree[it] == 0){
                    queue.add(it);
                }
            }
        }
        return topo;
    }
}
